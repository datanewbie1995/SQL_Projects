** List Of Countries **

SELECT * FROM Country;

** List Of Leagues And Their Country **

SELECT * FROM League JOIN Country ON Country.id = League.country_id;

** List of Teams **
SELECT * FROM Team Order By team_short_name Limit 5;

** List of Matches **
SELECT Match.id, 
    Country.name AS country_name, 
    League.name AS league_name, 
    season, 
    stage, 
    date,
     HT.team_long_name AS  home_team,
     AT.team_long_name AS away_team,
     home_team_goal, 
     away_team_goal                                        
FROM Match
JOIN Country on Country.id = Match.country_id
JOIN League on League.id = Match.league_id
LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id
LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id
WHERE country_name = 'France' ORDER by date LIMIT 5;

** Analysis
SELECT Country.name AS country_name, 
    League.name AS league_name, 
     season,
     count(distinct stage) AS number_of_stages,
     count(distinct HT.team_long_name) AS number_of_teams,
     avg(home_team_goal) AS avg_home_team_scors, 
     avg(away_team_goal) AS avg_away_team_goals, 
     avg(home_team_goal-away_team_goal) AS avg_goal_dif, 
     avg(home_team_goal+away_team_goal) AS avg_goals, 
     sum(home_team_goal+away_team_goal) AS total_goals                                       
FROM Match
JOIN Country on Country.id = Match.country_id
JOIN League on League.id = Match.league_id
LEFT JOIN Team AS HT on HT.team_api_id = Match.home_team_api_id
LEFT JOIN Team AS AT on AT.team_api_id = Match.away_team_api_id
WHERE country_name in ('France', 'Germany', 'Italy', 'Netherland', 'Poland')
GROUP BY Country.name, League.name, season
HAVING count(distinct stage) > 16
ORDER BY Country.name, League.name, season DESC;

SELECT CASE
 WHEN ROUND(height)<165 then 165
WHEN ROUND(height)>195 then 195
 ELSE ROUND(height)
  END AS calc_height, 
 COUNT(height) AS distribution, 
(avg(PA_Grouped.avg_overall_rating)) AS avg_overall_rating,
 (avg(PA_Grouped.avg_potential)) AS avg_potential,
  AVG(weight) AS avg_weight 
FROM PLAYER
 LEFT JOIN (SELECT Player_Attributes.player_api_id, 
  avg(Player_Attributes.overall_rating) AS avg_overall_rating,
 avg(Player_Attributes.potential) AS avg_potential  
 FROM Player_Attributes
GROUP BY Player_Attributes.player_api_id) 
 AS PA_Grouped ON PLAYER.player_api_id = PA_Grouped.player_api_id
GROUP BY calc_height
 ORDER BY calc_height;
 
 
